<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaolugoo.webapp.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.xiaolugoo.webapp.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_nick" jdbcType="VARCHAR" property="userNick" />
    <result column="user_gender" jdbcType="CHAR" property="userGender" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_qq" jdbcType="INTEGER" property="userQq" />
    <result column="user_wechar" jdbcType="VARCHAR" property="userWechar" />
    <result column="register_date" jdbcType="DATE" property="registerDate" />
    <result column="user_status" jdbcType="VARCHAR" property="userStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_email, user_nick, user_gender, user_account, user_qq,
    user_wechar, register_date, user_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_base
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user_base
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xiaolugoo.webapp.model.User" useGeneratedKeys="true" keyProperty="userId">
    <selectKey keyProperty="userId" resultType="Integer" order="BEFORE">
      select SEQ_USER_BASE.Nextval from dual
    </selectKey>
    insert into t_user_base (user_id, user_name, user_email, user_nick,
      user_gender, user_account, user_password, 
      user_qq, user_wechar, register_date, user_status
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userNick,jdbcType=VARCHAR},
      #{userGender,jdbcType=CHAR}, #{userAccount,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
      #{userQq,jdbcType=INTEGER}, #{userWechar,jdbcType=VARCHAR}, sysdate, #{userStatus,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaolugoo.webapp.model.User">
    update t_user_base
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userNick != null">
        user_nick = #{userNick,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        user_gender = #{userGender,jdbcType=CHAR},
      </if>
      <if test="userAccount != null">
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userQq != null">
        user_qq = #{userQq,jdbcType=INTEGER},
      </if>
      <if test="userWechar != null">
        user_wechar = #{userWechar,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <select id="userLogin" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user_base
    where user_account = #{userAccount,jdbcType=INTEGER}
    and user_password = #{userPassword,jdbcType=INTEGER}
  </select>
</mapper>